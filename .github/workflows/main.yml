name: Deploy to AWS

on:
  push:
    branches:
      - deploy  # Only triggers for the deploy branch
  workflow_dispatch:  # Allows manual triggering

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: Terraform Init
        run: terraform init
        working-directory: .

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve
        working-directory: .
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Get frontend URL
        id: get-frontend-url
        run: |
          frontend_url=$(terraform output -raw REACT_APP_API_SERVICE_URL)
          echo "REACT_APP_API_SERVICE_URL=${frontend_url}" >> $GITHUB_ENV
        working-directory: .

      - name: Get backend URL
        id: get-backend-url
        run: |
          backend_url=$(terraform output -raw backend_url)
          echo "DATABASE_URL=${backend_url}" >> $GITHUB_ENV
        working-directory: .

      - name: Debug URLs
        run: |
          echo "Frontend URL: $REACT_APP_API_SERVICE_URL"
          echo "Backend URL: $DATABASE_URL"
        env:
          REACT_APP_API_SERVICE_URL: ${{ env.REACT_APP_API_SERVICE_URL }}
          DATABASE_URL: ${{ env.DATABASE_URL }}

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and deploy Backend image
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
        run: |
          docker build --no-cache -f ./be/Dockerfile -t backend:latest ./be
          docker run -d --name backend backend:latest

      - name: Build and deploy Frontend image
        env:
          REACT_APP_API_SERVICE_URL: ${{ env.REACT_APP_API_SERVICE_URL }}
        run: |
          docker build --no-cache -f ./fe/Dockerfile -t frontend:latest --build-arg NODE_ENV=production --build-arg REACT_APP_API_SERVICE_URL=$REACT_APP_API_SERVICE_URL ./fe
          docker run -d --name frontend frontend:latest
