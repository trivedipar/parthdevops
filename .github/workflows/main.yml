name: Deploy to AWS

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: Terraform Init
        run: terraform init
        working-directory: terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: terraform

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      REACT_APP_API_SERVICE_URL: "http://${{ steps.terraform.outputs.frontend_url }}"
      DATABASE_URL: "mongodb://${{ steps.terraform.outputs.backend_url }}:27017/"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and deploy MongoDB image
        run: |
          docker build --no-cache -f ./db/Dockerfile -t mongodb:latest --build-arg DATABASE_URL=$DATABASE_URL ./db
          docker run -d --name mongodb mongodb:latest

      - name: Build and deploy Backend image
        run: |
          docker build --no-cache -f ./be/Dockerfile -t backend:latest ./be
          docker run -d --name backend backend:latest

      - name: Build and deploy Frontend image
        run: |
          docker build --no-cache -f ./fe/Dockerfile -t frontend:latest --build-arg NODE_ENV=production --build-arg REACT_APP_API_SERVICE_URL=$REACT_APP_API_SERVICE_URL ./fe
          docker run -d --name frontend frontend:latest
